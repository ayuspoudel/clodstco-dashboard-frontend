name: OCI Dev Infra Pipeline

on:
  push:
    branches:
      - main
    paths:
      - './terraform/cloud-oci-dev/**'
      - './terraform/modules/**'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  terraform-plan:
    name: Terraform Init + Validate + Plan (OCI)
    runs-on: ubuntu-latest

    env:
      TF_VAR_tenancy_ocid: ${{ secrets.OCI_TENANCY_OCID }}
      TF_VAR_user_ocid: ${{ secrets.OCI_USER_OCID }}
      TF_VAR_fingerprint: ${{ secrets.OCI_FINGERPRINT }}
      TF_VAR_region: ${{ secrets.OCI_REGION }}
      TF_VAR_compartment_ocid: ${{ secrets.OCI_COMPARTMENT_OCID }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Inject OCI Private Key
        run: |
          mkdir -p ~/.oci
          echo "${{ secrets.OCI_CLI_KEY }}" > ~/.oci/oci_api_key.pem
          chmod 600 ~/.oci/oci_api_key.pem
          echo "[DEFAULT]" > ~/.oci/config
          echo "user=${{ secrets.OCI_USER_OCID }}" >> ~/.oci/config
          echo "fingerprint=${{ secrets.OCI_FINGERPRINT }}" >> ~/.oci/config
          echo "key_file=~/.oci/oci_api_key.pem" >> ~/.oci/config
          echo "tenancy=${{ secrets.OCI_TENANCY_OCID }}" >> ~/.oci/config
          echo "region=${{ secrets.OCI_REGION }}" >> ~/.oci/config

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.3

      - name: Terraform Init
        working-directory: terraform/cloud-oci-dev
        run: terraform init -reconfigure

      - name: Terraform Validate
        working-directory: terraform/cloud-oci-dev
        run: terraform validate

      - name: Terraform Plan
        working-directory: terraform/cloud-oci-dev
        run: terraform plan -out=tfplan

  terraform-apply:
    name: Terraform Apply (OCI)
    runs-on: ubuntu-latest
    needs: terraform-plan
    environment: live-infra

    env:
      TF_VAR_tenancy_ocid: ${{ secrets.OCI_TENANCY_OCID }}
      TF_VAR_user_ocid: ${{ secrets.OCI_USER_OCID }}
      TF_VAR_fingerprint: ${{ secrets.OCI_FINGERPRINT }}
      TF_VAR_region: ${{ secrets.OCI_REGION }}
      TF_VAR_compartment_ocid: ${{ secrets.OCI_COMPARTMENT_OCID }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Inject OCI Private Key
        run: |
          mkdir -p ~/.oci
          echo "${{ secrets.OCI_CLI_KEY }}" > ~/.oci/oci_api_key.pem
          chmod 600 ~/.oci/oci_api_key.pem
          echo "[DEFAULT]" > ~/.oci/config
          echo "user=${{ secrets.OCI_USER_OCID }}" >> ~/.oci/config
          echo "fingerprint=${{ secrets.OCI_FINGERPRINT }}" >> ~/.oci/config
          echo "key_file=~/.oci/oci_api_key.pem" >> ~/.oci/config
          echo "tenancy=${{ secrets.OCI_TENANCY_OCID }}" >> ~/.oci/config
          echo "region=${{ secrets.OCI_REGION }}" >> ~/.oci/config

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.3

      - name: Terraform Init
        working-directory: terraform/cloud-oci-dev
        run: terraform init -reconfigure

      - name: Terraform Apply
        working-directory: terraform/cloud-oci-dev
        run: terraform apply -auto-approve

  terraform-destroy:
    name: Terraform Destroy (OCI)
    runs-on: ubuntu-latest
    needs: terraform-apply
    environment: destroy-infra

    env:
      TF_VAR_tenancy_ocid: ${{ secrets.OCI_TENANCY_OCID }}
      TF_VAR_user_ocid: ${{ secrets.OCI_USER_OCID }}
      TF_VAR_fingerprint: ${{ secrets.OCI_FINGERPRINT }}
      TF_VAR_region: ${{ secrets.OCI_REGION }}
      TF_VAR_compartment_ocid: ${{ secrets.OCI_COMPARTMENT_OCID }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Inject OCI Private Key
        run: |
          mkdir -p ~/.oci
          echo "${{ secrets.OCI_CLI_KEY }}" > ~/.oci/oci_api_key.pem
          chmod 600 ~/.oci/oci_api_key.pem
          echo "[DEFAULT]" > ~/.oci/config
          echo "user=${{ secrets.OCI_USER_OCID }}" >> ~/.oci/config
          echo "fingerprint=${{ secrets.OCI_FINGERPRINT }}" >> ~/.oci/config
          echo "key_file=~/.oci/oci_api_key.pem" >> ~/.oci/config
          echo "tenancy=${{ secrets.OCI_TENANCY_OCID }}" >> ~/.oci/config
          echo "region=${{ secrets.OCI_REGION }}" >> ~/.oci/config

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.3

      - name: Terraform Init
        working-directory: terraform/cloud-oci-dev
        run: terraform init -reconfigure

      - name: Terraform Destroy
        working-directory: terraform/cloud-oci-dev
        run: terraform destroy -auto-approve
